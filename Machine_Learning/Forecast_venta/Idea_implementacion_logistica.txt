Obejtivo:  pronóstico de ventas dinámico que no solo se actualiza con los datos históricos, sino que también incorpora factores externos que pueden influir en las ventas, como las previsiones económicas, el valor del dólar, y otras variables relevantes. A continuación, te propongo una estructura para implementar este sistema paso a paso.

1. Datos y Fuentes de Información
Para realizar los pronósticos más precisos posibles, necesitas diferentes tipos de datos. Aparte de los históricos de ventas (que ya tienes), debes incorporar variables externas. Aquí te sugiero algunas de ellas:

Datos internos:
Ventas históricas: en unidades, m3, y valor ($) por material.
Inventario disponible: para asegurar que los pronósticos sean coherentes con la capacidad de distribución.
Promociones y descuentos: para ajustar las predicciones si hay eventos promocionales programados.
Fecha y días festivos: para ajustar los efectos de estacionalidad o eventos especiales.
Datos externos:
Previsiones de crecimiento económico: Por ejemplo, datos del PIB (Producto Interno Bruto) de tu país, tasa de crecimiento esperada, etc.
Valor del dólar: Si el tipo de cambio influye en los costos o precios de los materiales, es clave incorporarlo.
Índices de inflación: La inflación afecta los precios de los materiales y el poder adquisitivo de los consumidores.
Precios de materias primas: Si los materiales que vendes dependen de ciertas materias primas, el precio de estas podría ser un factor.
Clima: En algunas industrias, el clima también puede influir en las ventas, por ejemplo, en el caso de productos estacionales.
Tendencias de mercado: A veces, datos sobre las tendencias de búsqueda o redes sociales pueden ser útiles si los productos están ligados a modas o tendencias cambiantes.
2. Implementación Técnica: Flujo de Datos y Actualización Diaria
Para que el modelo se actualice automáticamente con datos nuevos cada día, necesitarás automatizar los siguientes pasos:

2.1. Conexión al repositorio de datos históricos:
Puedes configurar una base de datos o un sistema de almacenamiento en la nube (por ejemplo, AWS S3, Google Cloud Storage) donde almacenes el histórico de ventas.

Los datos históricos de ventas y otros parámetros como el valor del dólar, el PIB, etc., pueden ser extraídos de diversas fuentes como:
Bases de datos internas.
APIs públicas (por ejemplo, del gobierno o de instituciones financieras).
Web scraping para obtener datos de previsiones económicas.
2.2. Automatización de la actualización diaria:
Configura una tarea programada (cron job) o un pipeline de ETL (extracción, transformación y carga) que lea los nuevos datos diariamente, y luego los actualice en tu sistema de pronóstico. Este proceso puede incluir:

Leer el histórico de ventas (actualización diaria).
Extraer los datos de factores externos como el valor del dólar, el crecimiento económico y otros.
Preprocesar los datos (limpieza, transformación).
Volver a ajustar y entrenar el modelo de pronóstico.
Este flujo podría implementarse con herramientas como Airflow, Luigi, o simplemente scripts en Python que corran cada día a una hora determinada.

2.3. Modelo de pronóstico para diferentes horizontes temporales:
Como mencionaste que deseas hacer predicciones a 14 días, 3 meses y 2 años, el modelo debe ajustarse para cubrir estos diferentes horizontes.

14 días (corto plazo): Este pronóstico debe ser muy preciso, usando solo datos históricos de ventas recientes. Aquí, un modelo ARIMA, SARIMAX o Prophet de Facebook podría funcionar bien.
3 meses (medio plazo): Aquí puedes usar una combinación de datos históricos y las variables externas. A medida que te alejas en el futuro, las variables externas como el valor del dólar, la inflación, o las previsiones de crecimiento económico juegan un papel más importante.
2 años (largo plazo): Este modelo se basa más en tendencias y crecimiento, y menos en fluctuaciones diarias. Aquí podrías usar modelos de regresión o redes neuronales (por ejemplo, LSTM), que pueden incorporar efectos más largos y complejos, o bien usar modelos de series temporales que incluyan tendencia y estacionalidad.
3. Modelo de Pronóstico Dinámico con Variables Externas
Para mejorar el rendimiento de tu modelo, puedes integrar las variables externas de manera dinámica, lo que hará que el modelo se ajuste conforme cambian estos factores. Aquí te doy una guía básica de cómo puedes hacerlo en Python utilizando SARIMAX (Seasonal ARIMA with Exogenous Regressors) o un modelo prophet con variables externas:

Modelo SARIMAX con variables externas:
from statsmodels.tsa.statespace.sarimax import SARIMAX
import pandas as pd
import numpy as np

# Cargar los datos de ventas históricas
ventas_data = pd.read_csv('historico_ventas.csv', parse_dates=['fecha'], index_col='fecha')

# Crear las variables exógenas (factores externos)
# Ejemplo: PIB, valor del dólar, inflación (estos pueden ser series temporales también)
external_factors = pd.read_csv('factores_externos.csv', parse_dates=['fecha'], index_col='fecha')

# Unir las series temporales de ventas con los factores externos
df = ventas_data.join(external_factors)

# Crear el modelo SARIMAX
model = SARIMAX(df['ventas'], 
                exog=df[['PIB', 'valor_dolar', 'inflacion']],  # Variables exógenas
                order=(5, 1, 1), 
                seasonal_order=(1, 1, 1, 12))  # Esto es para datos mensuales, ajusta según sea necesario

# Ajustar el modelo
results = model.fit()

# Pronóstico de los próximos 14 días, 3 meses y 2 años
forecast_14d = results.get_forecast(steps=14, exog=external_factors.tail(14))  # Pronóstico corto plazo
forecast_3m = results.get_forecast(steps=90, exog=external_factors.tail(90))  # Pronóstico medio plazo
forecast_2y = results.get_forecast(steps=730, exog=external_factors.tail(730))  # Pronóstico largo plazo

# Obtener el pronóstico
forecast_14d = forecast_14d.predicted_mean
forecast_3m = forecast_3m.predicted_mean
forecast_2y = forecast_2y.predicted_mean
Modelo Prophet con variables externas:
Facebook Prophet también permite incorporar exógenos y festivos para ajustar el pronóstico.

from fbprophet import Prophet
import pandas as pd

# Preparar los datos para Prophet
ventas_data = pd.read_csv('ventas.csv', parse_dates=['fecha'], usecols=['fecha', 'ventas'])
ventas_data.rename(columns={'fecha': 'ds', 'ventas': 'y'}, inplace=True)

# Crear el modelo Prophet
model = Prophet()

# Agregar las variables exógenas (por ejemplo, el valor del dólar o PIB)
model.add_regressor('valor_dolar')
model.add_regressor('inflacion')

# Ajustar el modelo
model.fit(ventas_data)

# Crear un DataFrame con las fechas futuras
future = model.make_future_dataframe(ventas_data, periods=365)  # 1 año de pronóstico
future['valor_dolar'] = valores_dolar_futuros  # Incluir los valores futuros de dólar
future['inflacion'] = inflacion_futura  # Incluir los valores futuros de inflación

# Realizar el pronóstico
forecast = model.predict(future)

# Ver el pronóstico de las ventas futuras
forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']]
4. Implementación en la Empresa y Toma de Decisiones
Una vez que tengas estos pronósticos, puedes integrarlos en las operaciones diarias de la empresa a través de herramientas de Business Intelligence (BI) o dashboards interactivos.

Dashboards interactivos: Usa herramientas como Power BI o Tableau para visualizar las predicciones y permitir que los equipos de ventas, producción, y marketing puedan tomar decisiones informadas.
Alertas automáticas: Configura alertas cuando los pronósticos indiquen una alta demanda inesperada, lo que podría generar necesidades de ajuste en producción o compras.
Optimización dinámica: A medida que los pronósticos cambian con nuevos datos, ajusta de manera automática las estrategias de marketing, las campañas promocionales, el nivel de inventarios, etc.
Conclusión:
Lo que estás proponiendo es un sistema de pronóstico robusto que no solo considera datos históricos, sino también variables externas importantes. La implementación de este sistema permitirá tomar decisiones informadas en tiempo real para ajustar las operaciones y optimizar los recursos de la empresa.

Si necesitas más ayuda con la implementación de alguna parte específica, ¡no dudes en pedírmelo!